"use strict";var deploymentPlan,commons=require("@permian/commons"),checkSystem=require("./check-system"),StorageLimitSetter=require("./storagelimit-setter"),StarterscriptCreator=require("./starterscript-creator"),ContainerDeployer=require("./container-deployer"),Finalizer=require("./finalizer"),deploymentPlanFile=process.argv[2]||"./deployment-plan.json",exit=function(){return commons.proc.terminateProcess("An error occured and changes were reverted")};checkSystem().catch(function(){return commons.proc.terminateProcess("Unsupported platform")}).then(function(){return commons.files.fsExtra.readJson(deploymentPlanFile)}).catch(function(){return commons.proc.terminateProcess("Deployment plan was not found: "+deploymentPlan)}).then(function(e){return deploymentPlan=e,StorageLimitSetter.createInstance(exit,deploymentPlan).apply()}).catch(function(e){return e.revert()}).then(function(e){return StarterscriptCreator.createInstance(e.revert,deploymentPlan).apply()}).catch(function(e){return e.revert()}).then(function(e){return ContainerDeployer.createInstance(e.revert,deploymentPlan).apply()}).catch(function(e){return e.revert()}).then(function(e){return Finalizer.createInstance(e.revert,deploymentPlan).apply()}).catch(function(e){return e.revert()}).catch(function(e){return commons.proc.terminateProcess("Could not revert changes:\n"+e)}).then(function(){return console.log("Deployment was successful :)")});